{
  "hash": "7dce9fa2531190f7389e59f49338866f",
  "result": {
    "markdown": "---\ntitle: \"SAS Disease\"\nserver: shiny\n---\n\n\nTo demonstrate the various types of sums of squares, we'll create a data frame called \\`df_disease\\` taken from the SAS documentation (\\_\\_reference\\_\\_). The summary of the data is shown.\n\n\n\n\n\nThe general summary of the data is as follows\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n drug   disease       y        \n 1:18   1:24    Min.   :-6.00  \n 2:18   2:24    1st Qu.: 9.00  \n 3:18   3:24    Median :21.00  \n 4:18           Mean   :18.88  \n                3rd Qu.:28.00  \n                Max.   :44.00  \n                NA's   :14     \n```\n:::\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |df_disease |\n|Number of rows           |72         |\n|Number of columns        |3          |\n|_______________________  |           |\n|Column type frequency:   |           |\n|factor                   |2          |\n|numeric                  |1          |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                 |\n|:-------------|---------:|-------------:|:-------|--------:|:--------------------------|\n|drug          |         0|             1|FALSE   |        4|1: 18, 2: 18, 3: 18, 4: 18 |\n|disease       |         0|             1|FALSE   |        3|1: 24, 2: 24, 3: 24        |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|  mean|   sd| p0| p25| p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|-----:|----:|--:|---:|---:|---:|----:|:-----|\n|y             |        14|          0.81| 18.88| 12.8| -6|   9|  21|  28|   44|▅▆▆▇▂ |\n:::\n:::\n\npreserve9f3c3736464f8b09\n\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"dependencies\">\n{\"type\":\"list\",\"attributes\":{},\"value\":[]}\n</script>\n<!--/html_preserve-->\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"execution_dependencies\">\n{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\",\"version\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"data.frame\"]},\"row.names\":{\"type\":\"integer\",\"attributes\":{},\"value\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"assertthat\",\"base\",\"base64enc\",\"bit\",\"bit64\",\"cli\",\"compiler\",\"crayon\",\"datasets\",\"DBI\",\"digest\",\"dplyr\",\"DT\",\"ellipsis\",\"evaluate\",\"fansi\",\"fastmap\",\"generics\",\"glue\",\"graphics\",\"grDevices\",\"highr\",\"hms\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"jsonlite\",\"knitr\",\"later\",\"lifecycle\",\"magrittr\",\"methods\",\"mime\",\"parallel\",\"pillar\",\"pkgconfig\",\"promises\",\"purrr\",\"R6\",\"Rcpp\",\"readr\",\"repr\",\"rlang\",\"rmarkdown\",\"rstudioapi\",\"shiny\",\"skimr\",\"stats\",\"stringi\",\"stringr\",\"tibble\",\"tidyr\",\"tidyselect\",\"tools\",\"tzdb\",\"utf8\",\"utils\",\"vctrs\",\"vroom\",\"withr\",\"xfun\",\"xtable\",\"yaml\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.2.1\",\"4.2.1\",\"0.1-3\",\"4.0.4\",\"4.0.5\",\"3.4.1\",\"4.2.1\",\"1.5.1\",\"4.2.1\",\"1.1.3\",\"0.6.29\",\"1.0.10\",\"0.26\",\"0.3.2\",\"0.16\",\"1.0.3\",\"1.1.0\",\"0.1.3\",\"1.6.2\",\"4.2.1\",\"4.2.1\",\"0.9\",\"1.1.2\",\"0.5.3\",\"1.5.4\",\"1.6.6\",\"1.8.2\",\"1.40\",\"1.3.0\",\"1.0.3\",\"2.0.3\",\"4.2.1\",\"0.12\",\"4.2.1\",\"1.8.1\",\"2.0.3\",\"1.2.0.1\",\"0.3.5\",\"2.5.1\",\"1.0.9\",\"2.1.2\",\"1.1.4\",\"1.0.6\",\"2.19\",\"0.14\",\"1.7.2\",\"2.1.5\",\"4.2.1\",\"1.7.8\",\"1.4.1\",\"3.1.8\",\"1.2.1\",\"1.2.0.9000\",\"4.2.1\",\"0.3.0\",\"1.2.2\",\"4.2.1\",\"0.4.2\",\"1.5.7\",\"2.5.0\",\"0.33\",\"1.8-4\",\"2.3.5\"]}]}]}\n</script>\n<!--/html_preserve-->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {
      "preserve9f3c3736464f8b09": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-extras\">\nojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {\n  quos <- rlang::enquos(...)\n  vars <- rlang::list2(...)\n  nm <- names(vars)\n  if (is.null(nm)) {\n    nm <- rep_len(\"\", length(vars))\n  }\n  mapply(function(q, nm, val) {\n    # Infer name, if possible\n    if (nm == \"\") {\n      tryCatch({\n        nm <- rlang::as_name(q)\n      }, error = function(e) {\n        code <- paste(collapse = \"\\n\", deparse(rlang::f_rhs(q)))\n        stop(\"ojs_define() could not create a name for the argument: \", code)\n      })\n    }\n    .session$output[[nm]] <- val\n    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)\n    .session$sendCustomMessage(\"ojs-export\", list(name = nm))\n    NULL\n  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)\n  invisible()\n}\n</script>\n"
    },
    "postProcess": true
  }
}